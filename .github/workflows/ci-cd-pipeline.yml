name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  versioning:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load Current Version
        run: |
         grep -E 'tag: "V[0-9]+\.[0-9]+"' fastpostapp/values.yaml | cut -d '"' -f 2 > current_version.txt

      - name: Bump Version
        run: |
          current_version=$(cat current_version.txt)
          new_version=$(awk -v ver="$current_version" 'BEGIN {split(ver,a,"V"); split(a[2],b,"."); b[2]++; print "V"b[1]"."b[2]}')
          echo "New version: $new_version"
          echo $new_version > new_version.txt
          echo "::set-output name=version::$new_version"
      - name: Save New Version as Artifact
        uses: actions/upload-artifact@v2
        with:
            name: new_version
            path: new_version.txt
        

  build:
    runs-on: ubuntu-latest
    needs: versioning

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt

      - name: Run tests
        run: pytest

  docker:
    runs-on: ubuntu-latest
    needs: build



    steps:


      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download New Version Artifact
        uses: actions/download-artifact@v2
        with:
          name: new_version
    

      - name: Echo Docker tag
        run: echo "Building Docker Image with tag $(cat new_version.txt)"

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t adirremi/apiclusterapp-fastapi:$(cat new_version.txt) .

      - name: Push Docker Image
        run: docker push adirremi/apiclusterapp-fastapi:$(cat new_version.txt)

  deploy:
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Checkout code
        uses: actions/checkout@v4


      - name: Download New Version Artifact
        uses: actions/download-artifact@v2
        with:
          name: new_version
      

      - name: Create GCP credentials file from Base64
        run: |
          echo "Creating GCP credentials file from Base64..."
          echo "${{ secrets.GCP_CREDENTIALS }}" | base64 --decode > /tmp/gcp-key.json

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: lsa-data-425320
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true

      - name: Install gke-gcloud-auth-plugin manually
        run: |
          gcloud components update
          gcloud components install gke-gcloud-auth-plugin
          export USE_GKE_GCLOUD_AUTH_PLUGIN=True

      - name: Get Kubernetes credentials
        run: |
          gcloud container clusters get-credentials fastapi-cluster --region us-central1 --project lsa-data-425320

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Deploy to Kubernetes using Helm
        run: |
          helm upgrade --install fastpostapp ./fastpostapp --set image.repository=adirremi/apiclusterapp-fastapi --set image.tag=$(cat new_version.txt) --set image.pullPolicy=Always

  commit_changes:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download New Version Artifact
        uses: actions/download-artifact@v2
        with:
         name: new_version

      - name: Apply New Version to values.yaml
        run: |
         new_version=$(cat new_version.txt)
         sed -i '/repository: adirremi\/apiclusterapp-fastapi/!b;n;c\  tag: "'$new_version'"' fastpostapp/values.yaml
         git config --global user.name "GitHub Action"
         git config --global user.email "action@github.com"
         git add fastpostapp/values.yaml
         git commit -m "Updated tag version in values.yaml to $new_version"
         git push https://x-access-token:${{ secrets.REPO_TOKEN }}@github.com/adirremi/APIClusterApp.git
  rollback:
    runs-on: ubuntu-latest
    if: failure()

    steps:
      - name: Restore values.yaml if any step fails
        run: |
          cp fastpostapp/values_backup.yaml fastpostapp/values.yaml
          git add fastpostapp/values.yaml
          git commit -m "Revert version bump due to failure"
          git push https://x-access-token:${{ secrets.REPO_TOKEN }}@github.com/adirremi/APIClusterApp.git
