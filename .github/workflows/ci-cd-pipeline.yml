name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  versioning:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Backup values.yaml
        run: cp fastpostapp/values.yaml fastpostapp/values_backup.yaml

      - name: Bump Version
        id: bump_version
        run: |
          current_version=$(grep 'tag: "V' fastpostapp/values.yaml | cut -d '"' -f 2)
          new_version=$(awk -v ver="$current_version" 'BEGIN {split(ver,a,"V"); split(a[2],b,"."); b[2]++; print "V"b[1]"."b[2]}')
          echo "New version: $new_version"
          new_tag="tag: \"$new_version\""
          sed -i "/tag: \"/c\\$new_tag" fastpostapp/values.yaml
          echo "::set-output name=version::$new_version"
          echo "version=$new_version" >> $GITHUB_ENV

      - name: Commit and Push changes
        env:
            GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        run: |
            git config --global user.name "GitHub Action"
            git config --global user.email "action@github.com"
            git add fastpostapp/values.yaml
            git commit -m "Updated tag version in values.yaml to $new_version"
            git push https://x-access-token:${{ secrets.REPO_TOKEN }}@github.com/adirremi/APIClusterApp.git

  build:
    runs-on: ubuntu-latest
    needs: versioning

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt

      - name: Run tests
        run: pytest

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Echo Docker tag
        run: echo "Building Docker Image with tag:" "${{ env.version }}"
    
      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    
      - name: Build Docker Image
        run: docker build -t adirremi/apiclusterapp-fastapi:${{ env.version }} .
    
      - name: Push Docker Image
        run: docker push adirremi/apiclusterapp-fastapi:${{ env.version }}

  deploy:
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Deploy to Kubernetes using Helm
        run: |
          helm upgrade --install fastpostapp ./fastpostapp --set image.repository=adirremi/apiclusterapp-fastapi --set image.tag=${{ env.version }} --set image.pullPolicy=Always
          
  rollback:
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Restore values.yaml if any step fails
        run: cp fastpostapp/values_backup.yaml fastpostapp/values.yaml && git add fastpostapp/values.yaml && git commit -m "Revert version bump due to failure" && git push
